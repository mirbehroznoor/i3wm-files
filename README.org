*Wherever possible, I had provided reference/links to other's works. Some scripts are partly or completely my own work. However, without Stackoverflow, Archlinux, Google and DuckDuckGo, I would not have been able to work on my i3-config, Emacs and Ubuntu.*

** Installations

#+begin_src bash
sudo apt update
sudo apt install -y i3 ruby rofi jq xbacklight nautilus-dropbox git texlive-full
#+end_src

**** Xclutter - Hide Cursor after inactivity
#+begin_src bash
sudo apt install make gcc unclutter
#+end_src

**** Setup Git and Github
[[https://kbroman.org/github_tutorial/pages/first_time.html][Git and Github Tutorial]]

**** Detect HDD/SSD:
I used for caddy drive on Ubuntu. You can follow the [[https://askubuntu.com/questions/1054612/how-to-reset-and-detect-plug-in-hdd-ssd-via-ide-or-sata-without-rebooting#1058520][reset and detect plug hdd/ssd without reboot]] for detailed instructions, the basic solution is:
#+begin_src bash
sudo apt-get install -y scsitools
sudo rescan-scsi-bus
#+end_src

** Emacs

[[https://launchpad.net/~ubuntu-elisp/+archive/ubuntu/ppa][Latest Emacs Repository]]

#+begin_src bash
sudo add-apt-repository ppa:ubuntu-elisp/ppa
sudo apt-get update
sudo apt install -y emacs-snapshot ripgrep
#+end_src


** Xorg Configuration Files
Create a folder ~xorg.conf.d/~
Put the files in ~/etc/X11/xorg.conf.d/~
1. ~20-intel.conf~
2. ~90-touchpad.conf~

*** Backlight
~/xorg.conf.d/20-intel.conf~ add the following lines
#+begin_src conf
Section "Device"
    Identifier  "Intel Graphics"
    Driver      "intel"
    Option      "Backlight"  "intel_backlight"
EndSection
#+end_src
*** Touchpad
~/xorg.conf.d/90-touchpad.conf~ add the following lines. Depending on the case, choose one or try both. Also you check out the *tutorial*: [[https://major.io/2021/07/18/tray-icons-in-i3/][Enable touchpad tap to click in i3]]

#+begin_src
Section "InputClass"
        Identifier "touchpad Thinkpad"
        MatchIsTouchpad "on"
        Driver "libinput"
        Option "Tapping" "on"
        Option "TappingButtonMap" "lmr"
        Option "NaturalScrolling" "on"
        Option "ScrollMethod" "twofinger"
EndSection
#+end_src

#+begin_src
Section "InputClass"
        Identifier "libinput touchpad catchall"
        MatchIsTouchpad "on"
        MatchDevicePath "/dev/input/event*"
        Driver "libinput"
        Option "Tapping" "on"
EndSection
#+end_src


** Shell Message on Startup
Put the lines in your ~.bashrc~ file

#+begin_src bash
# echo's message at the startup of terminal
if [[ ! -f $XDG_RUNTIME_DIR/has-session ]]; then

red=$(tput setaf 1)
blue=$(tput setaf 4)
green=$(tput setaf 2)
bold=$(tput bold)
end=$(tput sgr0)

while :;
do

read -r -p "${blue}${bold}Hey $USER :)${end}
${green}Please Select an Option for your System Updates:${end}
${bold}Update & Upgrade [${bold}${red}both${end}]
${bold}Skip[${red}skip${end}]
${blue}${bold}Input${end}: " option

# ${bold}Update[${red}update${end}]
# ${bold}Upgrade[${red}upgrade${end}]

case $option in
    update)
        sudo apt-get -y update
        break
        ;;
    upgrade)
        sudo apt-get -y upgrade
        break
        ;;
    both)
        sudo apt-get -y update
        sudo apt-get -y upgrade
        break
        ;;
    skip)
        echo "Skipped"
        break
        ;;
    *) echo "Wrong Input"
       ;;
esac
done

: > "$XDG_RUNTIME_DIR/has-session"
fi
#+end_src

** i3 Scripts
*** Keys Setup [[https://github.com/mirbehroznoor/i3wm-files/tree/main/i3/i3scripts/keys.sh][i3script]]
- Swap ~Capslock~ with ~Control~
- Windows Key as ~Left Super~
- ~Right Alt~ to ~Right Super~
- ~Right Control~ to ~Escape~ /It acts both as control and Escape/
- Turn on all Num Keys
- *xmodmap* has to be installed

*** Many More [[https://github.com/mirbehroznoor/i3wm-files/tree/main/i3/i3scripts][i3scripts]]

*** i3status [[https://github.com/mirbehroznoor/i3wm-files/blob/main/i3status/config][Config]]
For those who use the lightweight i3status, please take note the ~/i3/values~ folder acts as the ~config~ file and store the values for i3status to read. For example: brightness value is sent to the file ~/values/brightness~ and from there, i3status reads the value for the bar.

*I have configured it to the extent that I do not feel like using i3blocks anymore ;)*

My special thanks to [[https://medium.com/hacker-toolbelt/my-i3status-customization-3e8ad6f0153a][Miguel Sampaio da Veiga's i3status Customization]] for the brilliant insight or idea for the modification and customization, also whoever else working on the *i3status*. Thank you!

** Rofi [[https://github.com/mirbehroznoor/i3wm-files/tree/main/rofi-themes][Custom + Official Themes]]
There are multiple themes that I customized to my own suitability and i3 appearance. However, I believe the scripts will work with any official Rofi theme ;)
**** I can try to add some screenshots
